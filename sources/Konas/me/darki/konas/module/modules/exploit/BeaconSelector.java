package me.darki.konas.module.modules.exploit;

import cookiedragon.eventsystem.Subscriber;
import io.netty.buffer.Unpooled;
import me.darki.konas.event.events.OpenBeaconEvent;
import me.darki.konas.event.events.PacketEvent;
import me.darki.konas.module.Module;
import net.minecraft.network.PacketBuffer;
import net.minecraft.network.play.client.CPacketCustomPayload;

/**
 * Made by TBM
 */

public class BeaconSelector extends Module {

    public static int effect = 1;

    private boolean doPacketCancel = true;

    public BeaconSelector() {
        super("BeaconSelector", "Allows you to change beacon effect", Category.EXPLOIT, "BeaconBypass");
    }


    @Subscriber
    public void onSendPacket(PacketEvent.Send event) {
        if(mc.world == null || mc.player == null) return;
        if (event.getPacket() instanceof CPacketCustomPayload && ((CPacketCustomPayload) event.getPacket()).getChannelName().equals("MC|Beacon") && doPacketCancel) {
            doPacketCancel = false;
            CPacketCustomPayload packet = (CPacketCustomPayload) event.getPacket();

            PacketBuffer packetBuffer = packet.getBufferData();
            int primaryEffect = packetBuffer.readInt();
            int secondaryEffect = packetBuffer.readInt();

            event.setCancelled(true);

            PacketBuffer newPacketBuffer = new PacketBuffer(Unpooled.buffer());
            newPacketBuffer.writeInt(effect);
            newPacketBuffer.writeInt(secondaryEffect);

            mc.player.connection.sendPacket(new CPacketCustomPayload("MC|Beacon", newPacketBuffer));

            doPacketCancel = true;

        }
    }

    @Subscriber
    public void openBeaconEvent(OpenBeaconEvent event) {
        event.cancel();
    }

}
