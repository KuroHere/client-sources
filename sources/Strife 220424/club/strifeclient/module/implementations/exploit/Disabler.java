package club.strifeclient.module.implementations.exploit;

import club.strifeclient.module.Category;
import club.strifeclient.module.Module;
import club.strifeclient.module.ModuleInfo;
import club.strifeclient.module.implementations.exploit.disabler.WatchdogDisabler;
import club.strifeclient.module.implementations.exploit.disabler.WatchdogTimerDisabler;
import club.strifeclient.setting.Mode;
import club.strifeclient.setting.ModeEnum;
import club.strifeclient.setting.implementations.ModeSetting;

import java.util.function.Supplier;

@ModuleInfo(name = "Disabler", description = "Disables some anti-cheat checks.", category = Category.EXPLOIT)
public final class Disabler extends Module {

    public final ModeSetting<DisablerMode> modeSetting = new ModeSetting<>("Mode", DisablerMode.WATCHDOG);

    @Override
    public Supplier<Object> getSuffix() {
        return () -> modeSetting.getValue().getName();
    }

    public enum DisablerMode implements ModeEnum<Disabler> {
        WATCHDOG(new WatchdogDisabler(), "Watchdog"), WATCHDOG_TIMER(new WatchdogTimerDisabler(), "Watchdog Timer");
        final Mode<DisablerMode> mode;
        final String name;
        DisablerMode(final Mode<DisablerMode> mode, final String name) {
            this.mode = mode;
            this.name = name;
        }
        @Override
        public Mode<DisablerMode> getMode() {
            return mode;
        }
        @Override
        public String getName() {
            return name;
        }
    }

}
