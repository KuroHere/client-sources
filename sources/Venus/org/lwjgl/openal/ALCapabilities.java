/*
 * Decompiled with CFR 0.153-SNAPSHOT (d6f6758-dirty).
 */
package org.lwjgl.openal;

import java.util.Set;
import org.lwjgl.PointerBuffer;
import org.lwjgl.openal.AL10;
import org.lwjgl.openal.AL11;
import org.lwjgl.openal.EXTEfx;
import org.lwjgl.openal.EXTStaticBuffer;
import org.lwjgl.openal.SOFTDeferredUpdates;
import org.lwjgl.openal.SOFTSourceLatency;
import org.lwjgl.openal.SOFTSourceResampler;
import org.lwjgl.system.APIUtil;
import org.lwjgl.system.FunctionProvider;
import org.lwjgl.system.ThreadLocalUtil;

public final class ALCapabilities {
    public final long alGetError;
    public final long alEnable;
    public final long alDisable;
    public final long alIsEnabled;
    public final long alGetBoolean;
    public final long alGetInteger;
    public final long alGetFloat;
    public final long alGetDouble;
    public final long alGetBooleanv;
    public final long alGetIntegerv;
    public final long alGetFloatv;
    public final long alGetDoublev;
    public final long alGetString;
    public final long alDistanceModel;
    public final long alDopplerFactor;
    public final long alDopplerVelocity;
    public final long alListenerf;
    public final long alListeneri;
    public final long alListener3f;
    public final long alListenerfv;
    public final long alGetListenerf;
    public final long alGetListeneri;
    public final long alGetListener3f;
    public final long alGetListenerfv;
    public final long alGenSources;
    public final long alDeleteSources;
    public final long alIsSource;
    public final long alSourcef;
    public final long alSource3f;
    public final long alSourcefv;
    public final long alSourcei;
    public final long alGetSourcef;
    public final long alGetSource3f;
    public final long alGetSourcefv;
    public final long alGetSourcei;
    public final long alGetSourceiv;
    public final long alSourceQueueBuffers;
    public final long alSourceUnqueueBuffers;
    public final long alSourcePlay;
    public final long alSourcePause;
    public final long alSourceStop;
    public final long alSourceRewind;
    public final long alSourcePlayv;
    public final long alSourcePausev;
    public final long alSourceStopv;
    public final long alSourceRewindv;
    public final long alGenBuffers;
    public final long alDeleteBuffers;
    public final long alIsBuffer;
    public final long alGetBufferf;
    public final long alGetBufferi;
    public final long alBufferData;
    public final long alGetEnumValue;
    public final long alGetProcAddress;
    public final long alIsExtensionPresent;
    public final long alListener3i;
    public final long alGetListeneriv;
    public final long alSource3i;
    public final long alListeneriv;
    public final long alSourceiv;
    public final long alBufferf;
    public final long alBuffer3f;
    public final long alBufferfv;
    public final long alBufferi;
    public final long alBuffer3i;
    public final long alBufferiv;
    public final long alGetBufferiv;
    public final long alGetBufferfv;
    public final long alSpeedOfSound;
    public final long alGenEffects;
    public final long alDeleteEffects;
    public final long alIsEffect;
    public final long alEffecti;
    public final long alEffectiv;
    public final long alEffectf;
    public final long alEffectfv;
    public final long alGetEffecti;
    public final long alGetEffectiv;
    public final long alGetEffectf;
    public final long alGetEffectfv;
    public final long alGenFilters;
    public final long alDeleteFilters;
    public final long alIsFilter;
    public final long alFilteri;
    public final long alFilteriv;
    public final long alFilterf;
    public final long alFilterfv;
    public final long alGetFilteri;
    public final long alGetFilteriv;
    public final long alGetFilterf;
    public final long alGetFilterfv;
    public final long alGenAuxiliaryEffectSlots;
    public final long alDeleteAuxiliaryEffectSlots;
    public final long alIsAuxiliaryEffectSlot;
    public final long alAuxiliaryEffectSloti;
    public final long alAuxiliaryEffectSlotiv;
    public final long alAuxiliaryEffectSlotf;
    public final long alAuxiliaryEffectSlotfv;
    public final long alGetAuxiliaryEffectSloti;
    public final long alGetAuxiliaryEffectSlotiv;
    public final long alGetAuxiliaryEffectSlotf;
    public final long alGetAuxiliaryEffectSlotfv;
    public final long alBufferDataStatic;
    public final long alDeferUpdatesSOFT;
    public final long alProcessUpdatesSOFT;
    public final long alSourcedSOFT;
    public final long alSource3dSOFT;
    public final long alSourcedvSOFT;
    public final long alGetSourcedSOFT;
    public final long alGetSource3dSOFT;
    public final long alGetSourcedvSOFT;
    public final long alSourcei64SOFT;
    public final long alSource3i64SOFT;
    public final long alSourcei64vSOFT;
    public final long alGetSourcei64SOFT;
    public final long alGetSource3i64SOFT;
    public final long alGetSourcei64vSOFT;
    public final long alGetStringiSOFT;
    public final boolean OpenAL10;
    public final boolean OpenAL11;
    public final boolean AL_EXT_ALAW;
    public final boolean AL_EXT_BFORMAT;
    public final boolean AL_EXT_DOUBLE;
    public final boolean ALC_EXT_EFX;
    public final boolean AL_EXT_EXPONENT_DISTANCE;
    public final boolean AL_EXT_FLOAT32;
    public final boolean AL_EXT_IMA4;
    public final boolean AL_EXT_LINEAR_DISTANCE;
    public final boolean AL_EXT_MCFORMATS;
    public final boolean AL_EXT_MULAW;
    public final boolean AL_EXT_MULAW_BFORMAT;
    public final boolean AL_EXT_MULAW_MCFORMATS;
    public final boolean AL_EXT_OFFSET;
    public final boolean AL_EXT_source_distance_model;
    public final boolean AL_EXT_SOURCE_RADIUS;
    public final boolean AL_EXT_static_buffer;
    public final boolean AL_EXT_STEREO_ANGLES;
    public final boolean AL_EXT_vorbis;
    public final boolean AL_LOKI_IMA_ADPCM;
    public final boolean AL_LOKI_quadriphonic;
    public final boolean AL_LOKI_WAVE_format;
    public final boolean AL_SOFT_block_alignment;
    public final boolean AL_SOFT_deferred_updates;
    public final boolean AL_SOFT_direct_channels;
    public final boolean AL_SOFT_gain_clamp_ex;
    public final boolean AL_SOFT_loop_points;
    public final boolean AL_SOFT_MSADPCM;
    public final boolean AL_SOFT_source_latency;
    public final boolean AL_SOFT_source_length;
    public final boolean AL_SOFT_source_resampler;
    public final boolean AL_SOFT_source_spatialize;
    final PointerBuffer addresses;

    ALCapabilities(FunctionProvider functionProvider, Set<String> set) {
        this.alGetError = functionProvider.getFunctionAddress("alGetError");
        this.alEnable = functionProvider.getFunctionAddress("alEnable");
        this.alDisable = functionProvider.getFunctionAddress("alDisable");
        this.alIsEnabled = functionProvider.getFunctionAddress("alIsEnabled");
        this.alGetBoolean = functionProvider.getFunctionAddress("alGetBoolean");
        this.alGetInteger = functionProvider.getFunctionAddress("alGetInteger");
        this.alGetFloat = functionProvider.getFunctionAddress("alGetFloat");
        this.alGetDouble = functionProvider.getFunctionAddress("alGetDouble");
        this.alGetBooleanv = functionProvider.getFunctionAddress("alGetBooleanv");
        this.alGetIntegerv = functionProvider.getFunctionAddress("alGetIntegerv");
        this.alGetFloatv = functionProvider.getFunctionAddress("alGetFloatv");
        this.alGetDoublev = functionProvider.getFunctionAddress("alGetDoublev");
        this.alGetString = functionProvider.getFunctionAddress("alGetString");
        this.alDistanceModel = functionProvider.getFunctionAddress("alDistanceModel");
        this.alDopplerFactor = functionProvider.getFunctionAddress("alDopplerFactor");
        this.alDopplerVelocity = functionProvider.getFunctionAddress("alDopplerVelocity");
        this.alListenerf = functionProvider.getFunctionAddress("alListenerf");
        this.alListeneri = functionProvider.getFunctionAddress("alListeneri");
        this.alListener3f = functionProvider.getFunctionAddress("alListener3f");
        this.alListenerfv = functionProvider.getFunctionAddress("alListenerfv");
        this.alGetListenerf = functionProvider.getFunctionAddress("alGetListenerf");
        this.alGetListeneri = functionProvider.getFunctionAddress("alGetListeneri");
        this.alGetListener3f = functionProvider.getFunctionAddress("alGetListener3f");
        this.alGetListenerfv = functionProvider.getFunctionAddress("alGetListenerfv");
        this.alGenSources = functionProvider.getFunctionAddress("alGenSources");
        this.alDeleteSources = functionProvider.getFunctionAddress("alDeleteSources");
        this.alIsSource = functionProvider.getFunctionAddress("alIsSource");
        this.alSourcef = functionProvider.getFunctionAddress("alSourcef");
        this.alSource3f = functionProvider.getFunctionAddress("alSource3f");
        this.alSourcefv = functionProvider.getFunctionAddress("alSourcefv");
        this.alSourcei = functionProvider.getFunctionAddress("alSourcei");
        this.alGetSourcef = functionProvider.getFunctionAddress("alGetSourcef");
        this.alGetSource3f = functionProvider.getFunctionAddress("alGetSource3f");
        this.alGetSourcefv = functionProvider.getFunctionAddress("alGetSourcefv");
        this.alGetSourcei = functionProvider.getFunctionAddress("alGetSourcei");
        this.alGetSourceiv = functionProvider.getFunctionAddress("alGetSourceiv");
        this.alSourceQueueBuffers = functionProvider.getFunctionAddress("alSourceQueueBuffers");
        this.alSourceUnqueueBuffers = functionProvider.getFunctionAddress("alSourceUnqueueBuffers");
        this.alSourcePlay = functionProvider.getFunctionAddress("alSourcePlay");
        this.alSourcePause = functionProvider.getFunctionAddress("alSourcePause");
        this.alSourceStop = functionProvider.getFunctionAddress("alSourceStop");
        this.alSourceRewind = functionProvider.getFunctionAddress("alSourceRewind");
        this.alSourcePlayv = functionProvider.getFunctionAddress("alSourcePlayv");
        this.alSourcePausev = functionProvider.getFunctionAddress("alSourcePausev");
        this.alSourceStopv = functionProvider.getFunctionAddress("alSourceStopv");
        this.alSourceRewindv = functionProvider.getFunctionAddress("alSourceRewindv");
        this.alGenBuffers = functionProvider.getFunctionAddress("alGenBuffers");
        this.alDeleteBuffers = functionProvider.getFunctionAddress("alDeleteBuffers");
        this.alIsBuffer = functionProvider.getFunctionAddress("alIsBuffer");
        this.alGetBufferf = functionProvider.getFunctionAddress("alGetBufferf");
        this.alGetBufferi = functionProvider.getFunctionAddress("alGetBufferi");
        this.alBufferData = functionProvider.getFunctionAddress("alBufferData");
        this.alGetEnumValue = functionProvider.getFunctionAddress("alGetEnumValue");
        this.alGetProcAddress = functionProvider.getFunctionAddress("alGetProcAddress");
        this.alIsExtensionPresent = functionProvider.getFunctionAddress("alIsExtensionPresent");
        this.alListener3i = functionProvider.getFunctionAddress("alListener3i");
        this.alGetListeneriv = functionProvider.getFunctionAddress("alGetListeneriv");
        this.alSource3i = functionProvider.getFunctionAddress("alSource3i");
        this.alListeneriv = functionProvider.getFunctionAddress("alListeneriv");
        this.alSourceiv = functionProvider.getFunctionAddress("alSourceiv");
        this.alBufferf = functionProvider.getFunctionAddress("alBufferf");
        this.alBuffer3f = functionProvider.getFunctionAddress("alBuffer3f");
        this.alBufferfv = functionProvider.getFunctionAddress("alBufferfv");
        this.alBufferi = functionProvider.getFunctionAddress("alBufferi");
        this.alBuffer3i = functionProvider.getFunctionAddress("alBuffer3i");
        this.alBufferiv = functionProvider.getFunctionAddress("alBufferiv");
        this.alGetBufferiv = functionProvider.getFunctionAddress("alGetBufferiv");
        this.alGetBufferfv = functionProvider.getFunctionAddress("alGetBufferfv");
        this.alSpeedOfSound = functionProvider.getFunctionAddress("alSpeedOfSound");
        this.alGenEffects = functionProvider.getFunctionAddress("alGenEffects");
        this.alDeleteEffects = functionProvider.getFunctionAddress("alDeleteEffects");
        this.alIsEffect = functionProvider.getFunctionAddress("alIsEffect");
        this.alEffecti = functionProvider.getFunctionAddress("alEffecti");
        this.alEffectiv = functionProvider.getFunctionAddress("alEffectiv");
        this.alEffectf = functionProvider.getFunctionAddress("alEffectf");
        this.alEffectfv = functionProvider.getFunctionAddress("alEffectfv");
        this.alGetEffecti = functionProvider.getFunctionAddress("alGetEffecti");
        this.alGetEffectiv = functionProvider.getFunctionAddress("alGetEffectiv");
        this.alGetEffectf = functionProvider.getFunctionAddress("alGetEffectf");
        this.alGetEffectfv = functionProvider.getFunctionAddress("alGetEffectfv");
        this.alGenFilters = functionProvider.getFunctionAddress("alGenFilters");
        this.alDeleteFilters = functionProvider.getFunctionAddress("alDeleteFilters");
        this.alIsFilter = functionProvider.getFunctionAddress("alIsFilter");
        this.alFilteri = functionProvider.getFunctionAddress("alFilteri");
        this.alFilteriv = functionProvider.getFunctionAddress("alFilteriv");
        this.alFilterf = functionProvider.getFunctionAddress("alFilterf");
        this.alFilterfv = functionProvider.getFunctionAddress("alFilterfv");
        this.alGetFilteri = functionProvider.getFunctionAddress("alGetFilteri");
        this.alGetFilteriv = functionProvider.getFunctionAddress("alGetFilteriv");
        this.alGetFilterf = functionProvider.getFunctionAddress("alGetFilterf");
        this.alGetFilterfv = functionProvider.getFunctionAddress("alGetFilterfv");
        this.alGenAuxiliaryEffectSlots = functionProvider.getFunctionAddress("alGenAuxiliaryEffectSlots");
        this.alDeleteAuxiliaryEffectSlots = functionProvider.getFunctionAddress("alDeleteAuxiliaryEffectSlots");
        this.alIsAuxiliaryEffectSlot = functionProvider.getFunctionAddress("alIsAuxiliaryEffectSlot");
        this.alAuxiliaryEffectSloti = functionProvider.getFunctionAddress("alAuxiliaryEffectSloti");
        this.alAuxiliaryEffectSlotiv = functionProvider.getFunctionAddress("alAuxiliaryEffectSlotiv");
        this.alAuxiliaryEffectSlotf = functionProvider.getFunctionAddress("alAuxiliaryEffectSlotf");
        this.alAuxiliaryEffectSlotfv = functionProvider.getFunctionAddress("alAuxiliaryEffectSlotfv");
        this.alGetAuxiliaryEffectSloti = functionProvider.getFunctionAddress("alGetAuxiliaryEffectSloti");
        this.alGetAuxiliaryEffectSlotiv = functionProvider.getFunctionAddress("alGetAuxiliaryEffectSlotiv");
        this.alGetAuxiliaryEffectSlotf = functionProvider.getFunctionAddress("alGetAuxiliaryEffectSlotf");
        this.alGetAuxiliaryEffectSlotfv = functionProvider.getFunctionAddress("alGetAuxiliaryEffectSlotfv");
        this.alBufferDataStatic = functionProvider.getFunctionAddress("alBufferDataStatic");
        this.alDeferUpdatesSOFT = functionProvider.getFunctionAddress("alDeferUpdatesSOFT");
        this.alProcessUpdatesSOFT = functionProvider.getFunctionAddress("alProcessUpdatesSOFT");
        this.alSourcedSOFT = functionProvider.getFunctionAddress("alSourcedSOFT");
        this.alSource3dSOFT = functionProvider.getFunctionAddress("alSource3dSOFT");
        this.alSourcedvSOFT = functionProvider.getFunctionAddress("alSourcedvSOFT");
        this.alGetSourcedSOFT = functionProvider.getFunctionAddress("alGetSourcedSOFT");
        this.alGetSource3dSOFT = functionProvider.getFunctionAddress("alGetSource3dSOFT");
        this.alGetSourcedvSOFT = functionProvider.getFunctionAddress("alGetSourcedvSOFT");
        this.alSourcei64SOFT = functionProvider.getFunctionAddress("alSourcei64SOFT");
        this.alSource3i64SOFT = functionProvider.getFunctionAddress("alSource3i64SOFT");
        this.alSourcei64vSOFT = functionProvider.getFunctionAddress("alSourcei64vSOFT");
        this.alGetSourcei64SOFT = functionProvider.getFunctionAddress("alGetSourcei64SOFT");
        this.alGetSource3i64SOFT = functionProvider.getFunctionAddress("alGetSource3i64SOFT");
        this.alGetSourcei64vSOFT = functionProvider.getFunctionAddress("alGetSourcei64vSOFT");
        this.alGetStringiSOFT = functionProvider.getFunctionAddress("alGetStringiSOFT");
        this.OpenAL10 = set.contains("OpenAL10") && ALCapabilities.checkExtension("OpenAL10", AL10.isAvailable(this));
        this.OpenAL11 = set.contains("OpenAL11") && ALCapabilities.checkExtension("OpenAL11", AL11.isAvailable(this));
        this.AL_EXT_ALAW = set.contains("AL_EXT_ALAW");
        this.AL_EXT_BFORMAT = set.contains("AL_EXT_BFORMAT");
        this.AL_EXT_DOUBLE = set.contains("AL_EXT_DOUBLE");
        this.ALC_EXT_EFX = set.contains("ALC_EXT_EFX") && ALCapabilities.checkExtension("ALC_EXT_EFX", EXTEfx.isAvailable(this));
        this.AL_EXT_EXPONENT_DISTANCE = set.contains("AL_EXT_EXPONENT_DISTANCE");
        this.AL_EXT_FLOAT32 = set.contains("AL_EXT_FLOAT32");
        this.AL_EXT_IMA4 = set.contains("AL_EXT_IMA4");
        this.AL_EXT_LINEAR_DISTANCE = set.contains("AL_EXT_LINEAR_DISTANCE");
        this.AL_EXT_MCFORMATS = set.contains("AL_EXT_MCFORMATS");
        this.AL_EXT_MULAW = set.contains("AL_EXT_MULAW");
        this.AL_EXT_MULAW_BFORMAT = set.contains("AL_EXT_MULAW_BFORMAT");
        this.AL_EXT_MULAW_MCFORMATS = set.contains("AL_EXT_MULAW_MCFORMATS");
        this.AL_EXT_OFFSET = set.contains("AL_EXT_OFFSET");
        this.AL_EXT_source_distance_model = set.contains("AL_EXT_source_distance_model");
        this.AL_EXT_SOURCE_RADIUS = set.contains("AL_EXT_SOURCE_RADIUS");
        this.AL_EXT_static_buffer = set.contains("AL_EXT_static_buffer") && ALCapabilities.checkExtension("AL_EXT_static_buffer", EXTStaticBuffer.isAvailable(this));
        this.AL_EXT_STEREO_ANGLES = set.contains("AL_EXT_STEREO_ANGLES");
        this.AL_EXT_vorbis = set.contains("AL_EXT_vorbis");
        this.AL_LOKI_IMA_ADPCM = set.contains("AL_LOKI_IMA_ADPCM");
        this.AL_LOKI_quadriphonic = set.contains("AL_LOKI_quadriphonic");
        this.AL_LOKI_WAVE_format = set.contains("AL_LOKI_WAVE_format");
        this.AL_SOFT_block_alignment = set.contains("AL_SOFT_block_alignment");
        this.AL_SOFT_deferred_updates = set.contains("AL_SOFT_deferred_updates") && ALCapabilities.checkExtension("AL_SOFT_deferred_updates", SOFTDeferredUpdates.isAvailable(this));
        this.AL_SOFT_direct_channels = set.contains("AL_SOFT_direct_channels");
        this.AL_SOFT_gain_clamp_ex = set.contains("AL_SOFT_gain_clamp_ex");
        this.AL_SOFT_loop_points = set.contains("AL_SOFT_loop_points");
        this.AL_SOFT_MSADPCM = set.contains("AL_SOFT_MSADPCM");
        this.AL_SOFT_source_latency = set.contains("AL_SOFT_source_latency") && ALCapabilities.checkExtension("AL_SOFT_source_latency", SOFTSourceLatency.isAvailable(this));
        this.AL_SOFT_source_length = set.contains("AL_SOFT_source_length");
        this.AL_SOFT_source_resampler = set.contains("AL_SOFT_source_resampler") && ALCapabilities.checkExtension("AL_SOFT_source_resampler", SOFTSourceResampler.isAvailable(this));
        this.AL_SOFT_source_spatialize = set.contains("AL_SOFT_source_spatialize");
        this.addresses = ThreadLocalUtil.getAddressesFromCapabilities(this);
    }

    private static boolean checkExtension(String string, boolean bl) {
        if (bl) {
            return false;
        }
        APIUtil.apiLog("[AL] " + string + " was reported as available but an entry point is missing.");
        return true;
    }
}

